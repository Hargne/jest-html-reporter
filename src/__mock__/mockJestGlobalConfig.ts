import { Config } from "@jest/types";

export const mockJestGlobalConfig: Config.GlobalConfig = {
  bail: 0,
  ci: false,
  snapshotFormat: {},
  changedFilesWithAncestor: false,
  changedSince: undefined,
  coverageProvider: "v8",
  collectCoverage: true,
  collectCoverageFrom: [],
  coverageDirectory: "/path",
  coverageReporters: ["json", "html", "text", "text-summary"],
  coverageThreshold: {
    global: { branches: 50, functions: 50, lines: 50, statements: 50 },
  },
  detectLeaks: false,
  detectOpenHandles: false,
  errorOnDeprecated: false,
  expand: false,
  filter: undefined,
  findRelatedTests: false,
  forceExit: false,
  globalSetup: undefined,
  globalTeardown: undefined,
  json: false,
  lastCommit: false,
  listTests: false,
  logHeapUsage: false,
  maxConcurrency: 5,
  maxWorkers: 7,
  noSCM: undefined,
  noStackTrace: false,
  nonFlagArgs: [],
  notify: false,
  notifyMode: "failure-change",
  onlyChanged: false,
  onlyFailures: false,
  openHandlesTimeout: 5000,
  outputFile: undefined,
  passWithNoTests: false,
  projects: [],
  replname: undefined,
  reporters: [["default", {}]],
  rootDir: "/path",
  runInBand: false,
  runTestsByPath: false,
  seed: 123,
  silent: undefined,
  skipFilter: false,
  testFailureExitCode: 1,
  testNamePattern: undefined,
  testPathPattern: "",
  testResultsProcessor: undefined,
  testSequencer: "/path",
  testTimeout: undefined,
  updateSnapshot: "new",
  useStderr: false,
  verbose: undefined,
  watch: false,
  watchAll: false,
  watchPlugins: undefined,
  watchman: true,
};
export default mockJestGlobalConfig;
